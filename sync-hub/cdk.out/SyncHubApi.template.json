{
 "Resources": {
  "PowertoolsLayer17979D4B": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "CompatibleRuntimes": [
     "python3.12"
    ],
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-1"
     },
     "S3Key": "9bdf684685243b3f46337b4b057e2016ab2c7e7da3af0a60fb50d1f556c89cbf.zip"
    },
    "Description": "AWS Lambda Powertools"
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/PowertoolsLayer/Resource",
    "aws:asset:path": "asset.9bdf684685243b3f46337b4b057e2016ab2c7e7da3af0a60fb50d1f556c89cbf",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "LambdaRole3A44B857": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AWSXRayDaemonWriteAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/LambdaRole/Resource"
   }
  },
  "LambdaRoleDefaultPolicy75625A82": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "SyncHubData:ExportsOutputFnGetAttSettingsTable4DB0CCD0Arn1D1BE79B"
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "SyncHubData:ExportsOutputFnGetAttBookmarksTable5112AF79Arn6C1D76FC"
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "SyncHubData:ExportsOutputFnGetAttGroupsTableE5F9C3F0Arn712D5AC0"
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "SyncHubData:ExportsOutputFnGetAttGroupMembersTable5917DD66Arn797AE2F2"
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "SyncHubData:ExportsOutputFnGetAttSessionsTable7C302024Arn24FF8012"
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "SyncHubData:ExportsOutputFnGetAttBackupBucket26B8E51CArnB9BED001"
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "SyncHubData:ExportsOutputFnGetAttBackupBucket26B8E51CArnB9BED001"
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaRoleDefaultPolicy75625A82",
    "Roles": [
     {
      "Ref": "LambdaRole3A44B857"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/LambdaRole/DefaultPolicy/Resource"
   }
  },
  "ApiFunctionCE271BD4": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-1"
     },
     "S3Key": "2cfc1b1688665d8b8387ce8ffc67bbd6755b8d3bc64629c021f2fc4876fc8b97.zip"
    },
    "Environment": {
     "Variables": {
      "POWERTOOLS_SERVICE_NAME": "sync-hub",
      "POWERTOOLS_METRICS_NAMESPACE": "SyncHub",
      "LOG_LEVEL": "INFO",
      "USER_POOL_ID": {
       "Fn::ImportValue": "SyncHubAuth:ExportsOutputRefUserPool6BA7E5F296FD7236"
      },
      "SETTINGS_TABLE": {
       "Fn::ImportValue": "SyncHubData:ExportsOutputRefSettingsTable4DB0CCD0297D747B"
      },
      "BOOKMARKS_TABLE": {
       "Fn::ImportValue": "SyncHubData:ExportsOutputRefBookmarksTable5112AF799D024C02"
      },
      "GROUPS_TABLE": {
       "Fn::ImportValue": "SyncHubData:ExportsOutputRefGroupsTableE5F9C3F0ABB57D6E"
      },
      "GROUP_MEMBERS_TABLE": {
       "Fn::ImportValue": "SyncHubData:ExportsOutputRefGroupMembersTable5917DD66230A0220"
      },
      "SESSIONS_TABLE": {
       "Fn::ImportValue": "SyncHubData:ExportsOutputRefSessionsTable7C3020246E1CCFDD"
      },
      "BACKUP_BUCKET": {
       "Fn::ImportValue": "SyncHubData:ExportsOutputRefBackupBucket26B8E51C0D3CA3CE"
      }
     }
    },
    "Handler": "main.handler",
    "Layers": [
     {
      "Ref": "PowertoolsLayer17979D4B"
     }
    ],
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "LambdaRole3A44B857",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 30,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "LambdaRoleDefaultPolicy75625A82",
    "LambdaRole3A44B857"
   ],
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/ApiFunction/Resource",
    "aws:asset:path": "asset.2cfc1b1688665d8b8387ce8ffc67bbd6755b8d3bc64629c021f2fc4876fc8b97",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ApiFunctionLogRetentionDCC3A405": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "ApiFunctionCE271BD4"
       }
      ]
     ]
    },
    "RetentionInDays": 30
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/ApiFunction/LogRetention/Resource"
   }
  },
  "ApiFunctionApiGatewayInvoke7E8DD105": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ApiFunctionCE271BD4",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HttpApiF5A9A8A7"
       },
       "/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/ApiFunction/ApiGatewayInvoke"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:PutRetentionPolicy",
        "logs:DeleteRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": "nodejs22.x",
    "Timeout": 900,
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-1"
     },
     "S3Key": "2819175352ad1ce0dae768e83fc328fb70fb5f10b4a8ff0ccbcb791f02b0716d.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ],
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
    "aws:asset:path": "asset.2819175352ad1ce0dae768e83fc328fb70fb5f10b4a8ff0ccbcb791f02b0716d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "HttpApiF5A9A8A7": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "CorsConfiguration": {
     "AllowHeaders": [
      "*"
     ],
     "AllowMethods": [
      "*"
     ],
     "AllowOrigins": [
      "*"
     ]
    },
    "Name": "sync-hub-api",
    "ProtocolType": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/HttpApi/Resource"
   }
  },
  "HttpApiDefaultStage3EEB07D6": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AutoDeploy": true,
    "StageName": "$default"
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/HttpApi/DefaultStage/Resource"
   }
  },
  "JwtAuthorizer": {
   "Type": "AWS::ApiGatewayV2::Authorizer",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizerType": "JWT",
    "IdentitySource": [
     "$request.header.Authorization"
    ],
    "JwtConfiguration": {
     "Audience": [
      {
       "Fn::ImportValue": "SyncHubAuth:ExportsOutputRefUserPoolClient2F5918F753847A55"
      }
     ],
     "Issuer": {
      "Fn::Join": [
       "",
       [
        "https://cognito-idp.us-east-1.amazonaws.com/",
        {
         "Fn::ImportValue": "SyncHubAuth:ExportsOutputRefUserPool6BA7E5F296FD7236"
        }
       ]
      ]
     }
    },
    "Name": "JwtAuthorizer"
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/JwtAuthorizer"
   }
  },
  "LambdaIntegration": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "ApiFunctionCE271BD4",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/LambdaIntegration"
   }
  },
  "RouteGEThealth": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "GET /_health",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "LambdaIntegration"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/RouteGET_health"
   }
  },
  "RoutePOSTauthdevicestart": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer"
    },
    "RouteKey": "POST /auth/device/start",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "LambdaIntegration"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/RoutePOSTauthdevicestart"
   }
  },
  "RoutePOSTauthdeviceconfirm": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer"
    },
    "RouteKey": "POST /auth/device/confirm",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "LambdaIntegration"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/RoutePOSTauthdeviceconfirm"
   }
  },
  "RouteGETsettings": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer"
    },
    "RouteKey": "GET /settings",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "LambdaIntegration"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/RouteGETsettings"
   }
  },
  "RoutePOSTsettings": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer"
    },
    "RouteKey": "POST /settings",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "LambdaIntegration"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/RoutePOSTsettings"
   }
  },
  "RouteGETsettingsid": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer"
    },
    "RouteKey": "GET /settings/{id}",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "LambdaIntegration"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/RouteGETsettingsid"
   }
  },
  "RoutePUTsettingsid": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer"
    },
    "RouteKey": "PUT /settings/{id}",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "LambdaIntegration"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/RoutePUTsettingsid"
   }
  },
  "RouteDELETEsettingsid": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer"
    },
    "RouteKey": "DELETE /settings/{id}",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "LambdaIntegration"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/RouteDELETEsettingsid"
   }
  },
  "RouteGETsettingsidhistory": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer"
    },
    "RouteKey": "GET /settings/{id}/history",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "LambdaIntegration"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/RouteGETsettingsidhistory"
   }
  },
  "RoutePOSTsettingsidrollback": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer"
    },
    "RouteKey": "POST /settings/{id}/rollback",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "LambdaIntegration"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/RoutePOSTsettingsidrollback"
   }
  },
  "RouteGETsettingspublic": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "GET /settings/public",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "LambdaIntegration"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/RouteGETsettingspublic"
   }
  },
  "RoutePUTsettingsidvisibility": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer"
    },
    "RouteKey": "PUT /settings/{id}/visibility",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "LambdaIntegration"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/RoutePUTsettingsidvisibility"
   }
  },
  "RouteGETbookmarks": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer"
    },
    "RouteKey": "GET /bookmarks",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "LambdaIntegration"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/RouteGETbookmarks"
   }
  },
  "RoutePOSTbookmarks": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer"
    },
    "RouteKey": "POST /bookmarks",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "LambdaIntegration"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/RoutePOSTbookmarks"
   }
  },
  "RouteGETbookmarksid": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer"
    },
    "RouteKey": "GET /bookmarks/{id}",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "LambdaIntegration"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/RouteGETbookmarksid"
   }
  },
  "RoutePUTbookmarksid": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer"
    },
    "RouteKey": "PUT /bookmarks/{id}",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "LambdaIntegration"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/RoutePUTbookmarksid"
   }
  },
  "RouteDELETEbookmarksid": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer"
    },
    "RouteKey": "DELETE /bookmarks/{id}",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "LambdaIntegration"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/RouteDELETEbookmarksid"
   }
  },
  "RouteGETgroups": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer"
    },
    "RouteKey": "GET /groups",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "LambdaIntegration"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/RouteGETgroups"
   }
  },
  "RoutePOSTgroups": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer"
    },
    "RouteKey": "POST /groups",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "LambdaIntegration"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/RoutePOSTgroups"
   }
  },
  "RouteGETgroupsid": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer"
    },
    "RouteKey": "GET /groups/{id}",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "LambdaIntegration"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/RouteGETgroupsid"
   }
  },
  "RoutePUTgroupsid": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer"
    },
    "RouteKey": "PUT /groups/{id}",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "LambdaIntegration"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/RoutePUTgroupsid"
   }
  },
  "RouteDELETEgroupsid": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer"
    },
    "RouteKey": "DELETE /groups/{id}",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "LambdaIntegration"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/RouteDELETEgroupsid"
   }
  },
  "RoutePOSTgroupsidinvite": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer"
    },
    "RouteKey": "POST /groups/{id}/invite",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "LambdaIntegration"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/RoutePOSTgroupsidinvite"
   }
  },
  "RouteGETgroupsidmembers": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer"
    },
    "RouteKey": "GET /groups/{id}/members",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "LambdaIntegration"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/RouteGETgroupsidmembers"
   }
  },
  "RoutePOSTsessionsidemoji": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer"
    },
    "RouteKey": "POST /sessions/{id}/emoji",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "LambdaIntegration"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/RoutePOSTsessionsidemoji"
   }
  },
  "ApiUrlParam8AD347B3": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Name": "/sync-hub/api/url",
    "Type": "String",
    "Value": {
     "Fn::GetAtt": [
      "HttpApiF5A9A8A7",
      "ApiEndpoint"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/ApiUrlParam/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VQy07DMBD8lt7dhaT8QIqEQKpEFCSu1dZdjJvYjuw1VYjy79guVOU0M+t9zLiGunqA+xWew1oe+/WgDzC/McpepNJ+HtAcjgjzDify7+SDdlY8fth/+ilayb8Pt7wlb3TILYsImz2GQBygyZA0bKPsibcYSGg0MHduoDxWsHWDllPZUtgiBqcC7JzqiMmWEzhqhUxnnL5qmJ+Zx2bUeSRDlimIKiuvpIn86bz+Jp/Vi2VSHv/8di4yJavB5D/w2qoWPZp0r3RfxbKIEiJvTU2io+CilxfzN/w18hh5Ee2Ujtq7DVQ1VNXqFLRe+5gyGILugj/tvURsiAEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "SyncHubApi/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "ApiUrl": {
   "Value": {
    "Fn::GetAtt": [
     "HttpApiF5A9A8A7",
     "ApiEndpoint"
    ]
   }
  },
  "ExportsOutputRefHttpApiF5A9A8A7F70B5BDD": {
   "Value": {
    "Ref": "HttpApiF5A9A8A7"
   },
   "Export": {
    "Name": "SyncHubApi:ExportsOutputRefHttpApiF5A9A8A7F70B5BDD"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}